import pandas as pd
import csv

# Read in the INVASIVE_SUBPLOT_SPP data
InvSpData = pd.read_csv('/Users/ryanlennon/Downloads/NY_INVASIVE_SUBPLOT_SPP.csv')

# Pivoting creates a data frame with a row for each plot and year and a row
# pd.pivot_table(Data Frame, index=["One field you want to keep", "A second field you want to keep..."], columns="The field you want to pivot", values="The column with the observations for that field", fill value=the number you want to fill the null values with)
# pd.pivot_table(Data Frame, index=["The field with the plot ID", "Field with the subplot ID", "The field with the year of each observation"], columns="The field with the species name or code", values="The column with the observations for each species", fill value=the number we should fill the observations with when there have been no observations for that species in the plot/subplot/year for that row)
pd.pivot_table(InvSpData, index=["PLOT", "SUBP", "INVYR"], columns="VEG_SPCD", values="COVER_PCT", fill_value=0)

# Join in additional data frames, like soil erosion
ErosionData = pd.read_csv('/Users/ryanlennon/Downloads/NY_SOILS_EROSION.csv')
# result = left.join(right)
invasive_erosion_joined = InvSpData.merge(ErosionData, on=["PLOT", "SUBP", "INVYR"])
# invasive_erosion_joined = InvSpData.set_index(["PLOT", "SUBP"]).join(ErosionData.set_index(["PLOT", "SUBP"]), rsuffix='_erosion')
# masterTable = invasive_erosion_joined[invasive_erosion_joined.columns.difference([x for x in invasive_erosion_joined.columns if '_erosion' in x])]
